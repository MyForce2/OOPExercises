nadav223




Locker implementation:
I chose to store the locker data in a map data structure, it was the simplest way
to store the information, and a hash map has an O(1) insertion / deletion on average
and since all of the items have a unique string specifying their type,
it's a good choice to use a hash map to store the items, different string are good keys for a hash
map and its much simpler for the programmer to use a map, than lets say a couple of lists, or a list
containing a Pair class.

LongTermStorage implementation:
I chose to store the long term storage data in a map as well, for the same reasons I chose to in
the Locker class, In addition, the map clear function is a very simple one to use to clear the inventory

BoopingSite class:
getHotelsInCityByRating - This method uses another method to get the array containing the hotels in
the given city, just so the code look nicer.
It then uses the function Arrays.sort in the Arrays class which takes in an array and sorts it in an 
ascending order using a Comparator of your choice, in this case we use StarRatingComparator which compares
according to the rules given for this method.
This type of design which is also used in the other methods of this class, (getHotelsByProximity,
getHotelsInCityByProximity) is very modular and easy to use, in order to change the the sorting,
all the programmer has to do is change the various comparator classes or use a different one.
Using the method Arrays.sort is also the most reliable way to sort an array quickly, since it will most
likely be faster and more reliable than any sorting method implemented by us.
